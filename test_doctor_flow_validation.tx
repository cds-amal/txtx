# Test file for flow validation in doctor command

flow "mainnet" {
    description = "Production environment"
    chain_id = 1
    rpc_url = input.mainnet_rpc  # Should validate input reference
}

flow "testnet" {
    chain_id = 5
    rpc_url = input.testnet_rpc
}

# This is actually VALID - flow attributes are available everywhere
variable "network_chain_id" {
    value = flow.chain_id  # OK: flow attributes available throughout execution
}

# This should error - undefined flow attribute
variable "invalid_flow_attr" {
    value = flow.undefined_attribute  # ERROR: attribute not in any flow
}

# Valid variable definition
variable "base_fee" {
    value = 1000000000
}

# Valid signer using input
signer "deployer" "evm::secret_key" {
    secret_key = input.private_key
}

# This should error - undefined variable
action "deploy" "evm::deploy" {
    signer = signer.deployer
    value = variable.undefined_var  # ERROR: undefined variable
    fee = variable.base_fee  # OK: defined variable
}

# This should error - undefined signer
action "transfer" "evm::send_eth" {
    signer = signer.undefined_signer  # ERROR: undefined signer
    to = "0x742d35Cc6634C0532925a3b844Bc9e7595f0f0f0"
    value = 1000000000000000000
}

# This should error - undefined action
output "result" {
    value = action.undefined_action.result  # ERROR: undefined action
}

# This should error - invalid action output field
output "tx" {
    value = action.transfer.from  # ERROR: 'from' is not an output of send_eth
}

# This should work - valid action output
output "tx_hash" {
    value = action.transfer.tx_hash  # OK: tx_hash is valid output
}

# Test circular dependency - output2 references output3 which doesn't exist yet
output "output2" {
    value = output.output3.value  # ERROR: forward reference to output
}

output "output3" {
    value = "test"
}